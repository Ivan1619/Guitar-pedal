#include <stdio.h>
#include <bcm2835.h> 

#define Button2           RPI_V2_GPIO_P1_38     
#define FS                RPI_GPIO_P1_10
#define TS                RPI_V2_GPIO_P1_32
#define Button1           RPI_GPIO_P1_08              
#define LED               RPI_V2_GPIO_P1_36   
 
uint32_t read_timer=0;
uint32_t input_signal=0;
  
uint8_t FS_value;
uint8_t TS_value;
uint8_t Button1_value;
uint8_t Button2_value;
  
int main(int argc, char **argv)
{

    bcm2835_init(); //BCM2835 Library
    bcm2835_spi_begin(); //SPI BUS

    //PWM Mode  
    bcm2835_gpio_fsel(18,BCM2835_GPIO_FSEL_ALT5 ); //PWM0 signal on GPIO18   
    bcm2835_pwm_set_mode(0,1 , 1);                 //channel 0, markspace mode, PWM enabled. 
    bcm2835_pwm_set_range(0,64);  
    
    bcm2835_gpio_fsel(13,BCM2835_GPIO_FSEL_ALT0 ); //PWM1 signal on GPIO13    
    bcm2835_pwm_set_mode(1, 1, 1);                 //channel 1, markspace mode, PWM enabled.
    bcm2835_pwm_set_range(1,64);                  
    
    bcm2835_pwm_set_clock(2); 
    
    //SPI BUS
    bcm2835_spi_setBitOrder(BCM2835_SPI_BIT_ORDER_MSBFIRST);     
    bcm2835_spi_setDataMode(BCM2835_SPI_MODE0);                  
    bcm2835_spi_setClockDivider(BCM2835_SPI_CLOCK_DIVIDER_64);   
    bcm2835_spi_chipSelect(BCM2835_SPI_CS0);                     
    bcm2835_spi_setChipSelectPolarity(BCM2835_SPI_CS0, LOW);     
  
    uint8_t mosi[10] = { 0x01, 0x00, 0x00 }; //12 bit ADC read channel 0. 
    uint8_t miso[10] = { 0 };
  
    //Define GPIO pins configuration
    bcm2835_gpio_fsel(Button1, BCM2835_GPIO_FSEL_INPT);           
    bcm2835_gpio_fsel(Button2, BCM2835_GPIO_FSEL_INPT);          
    bcm2835_gpio_fsel(TS, BCM2835_GPIO_FSEL_INPT);   
    bcm2835_gpio_fsel(FS, BCM2835_GPIO_FSEL_INPT);     
    
    bcm2835_gpio_set_pud(Button1, BCM2835_GPIO_PUD_UP);             
    bcm2835_gpio_set_pud(Button2, BCM2835_GPIO_PUD_UP);           
    bcm2835_gpio_set_pud(TS, BCM2835_GPIO_PUD_UP);  
    bcm2835_gpio_set_pud(FS, BCM2835_GPIO_PUD_UP);    
    
    while(1) 
    {
    
    rTimer++;
    if (rTimer == 60000) {
        rTimer = 0;
        uint8_t Button1_value = bcm2835_gpio_lev(Button1);
        uint8_t Button2_value = bcm2835_gpio_lev(Button2);
        TS_value = bcm2835_gpio_lev(TS);
        uint8_t FS_value = bcm2835_gpio_lev(FS);
    }
 
    //read ADC
    bcm2835_spi_transfernb(mosi, miso, 3);
    input_signal = miso[2] + ((miso[1] & 0x0F) << 8); 
  
    //                   CLEAN
    //Input directly to PWM output
  
    //generate output PWM signal 6 bits
    bcm2835_pwm_set_data(1,input_signal & 0x3F);
    bcm2835_pwm_set_data(0,input_signal >> 6);
    }
  
    bcm2835_spi_end();
    bcm2835_close();
    return 0;
}
